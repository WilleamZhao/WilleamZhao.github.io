<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[emacs集成七牛云存储]]></title>
      <url>%2F2016%2F10%2F23%2Femacs%E9%9B%86%E6%88%90%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%2F</url>
      <content type="text"><![CDATA[** 安装七牛云qshell命令行工具 下载wget ‘http://devtools.qiniu.com/qshell-v1.8.1.zip‘ 解压文件unzip qshell-v1.8.1.zip 找到对应操作系统版本文件，复制到~/opt/qshell文件夹下 配置七牛密钥 上七牛云网站创建一个密钥 执行命令 qshell account Access Key Secret Key]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[linux 常用命令]]></title>
      <url>%2F2016%2F08%2F22%2Flinux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
      <content type="text"><![CDATA[系统信息 arch 显示机器的处理器架构(1) uname -m 显示机器的处理器架构(2) uname -r 显示正在使用的内核版本 dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI) hdparm -i /dev/hda 罗列一个磁盘的架构特性 hdparm -tT /dev/sda 在磁盘上执行测试性读取操作 cat /proc/cpuinfo 显示 CPU info 的信息 cat /proc/interrupts 显示中断 cat /proc/meminfo 校验内存使用 cat /proc/swaps 显示哪些 swap 被使用 cat /proc/version 显示内核的版本 cat /proc/net/dev 显示网络适配器及统计 cat /proc/mounts 显示已加载的文件系统 lspci -tv 罗列 PCI 设备 lsusb -tv 显示 USB 设备 date 显示系统日期 cal 2007 显示 2007 年的日历表 date 041217002007.00 设置日期和时间 - 月日时分年.秒 clock -w 将时间修改保存到 BIOS关机 (系统的关机、重启以及登出 ) shutdown -h now 关闭系统(1) init 0 关闭系统(2) telinit 0 关闭系统(3) shutdown -h hours:minutes &amp; 按预定时间关闭系统 shutdown -c 取消按预定时间关闭系统 shutdown -r now 重启(1) reboot 重启(2) logout 注销 文件和目录 cd /home 进入 ‘/ home’ 目录’ cd .. 返回上一级目录 cd ../.. 返回上两级目录 cd 进入个人的主目录 cd ~user1 进入个人的主目录 cd - 返回上次所在的目录 pwd 显示工作路径 ls 查看目录中的文件 ls -F 查看目录中的文件 ls -l 显示文件和目录的详细资料 ls -a 显示隐藏文件 ls *[0-9]* 显示包含数字的文件名和目录名 tree 显示文件和目录由根目录开始的树形结构(1) lstree 显示文件和目录由根目录开始的树形结构(2) mkdir dir1 创建一个叫做 ‘dir1’ 的目录’ mkdir dir1 dir2 同时创建两个目录 mkdir -p /tmp/dir1/dir2 创建一个目录树 rm -f file1 删除一个叫做 ‘file1’ 的文件’ rmdir dir1 删除一个叫做 ‘dir1’ 的目录’ rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容 rm -rf dir1 dir2 同时删除两个目录及它们的内容 mv dir1 new_dir 重命名/移动 一个目录 cp file1 file2 复制一个文件 cp dir/* . 复制一个目录下的所有文件到当前工作目录 cp -a /tmp/dir1 . 复制一个目录到当前工作目录 cp -a dir1 dir2 复制一个目录 ln -s file1 lnk1 创建一个指向文件或目录的软链接 ln file1 lnk1 创建一个指向文件或目录的物理链接 touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm) file file1 outputs the mime type of the file as text iconv -l 列出已知的编码 iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding. find . -maxdepth 1 -name *.jpg -print -exec convert “{}” -resize 80x60 “thumbs/{}” \; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) 文件搜索 find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录 find / -user user1 搜索属于用户 ‘user1’ 的文件和目录 find /home/user1 -name \*.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件 find /usr/bin -type f -atime +100 搜索在过去 100 天内未被使用过的执行文件 find /usr/bin -type f -mtime -10 搜索在 10 天内被创建或者修改过的文件 find / -name \*.rpm -exec chmod 755 &#39;{}&#39; \; 搜索以 ‘.rpm’ 结尾的文件并定义其权限 find / -xdev -name \*.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备 locate \*.ps 寻找以 &#39;.ps&#39; 结尾的文件 - 先运行 ‘updatedb’ 命令 whereis halt 显示一个二进制文件、源码或 man 的位置 which halt 显示一个二进制文件或可执行文件的完整路径 挂载一个文件系统 mount /dev/hda2 /mnt/hda2 挂载一个叫做 hda2 的盘 - 确定目录 ‘/ mnt/hda2’ 已经存在 umount /dev/hda2 卸载一个叫做 hda2 的盘 - 先从挂载点 ‘/ mnt/hda2’ 退出 fuser -km /mnt/hda2 当设备繁忙时强制卸载 umount -n /mnt/hda2 运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用 mount /dev/fd0 /mnt/floppy 挂载一个软盘 mount /dev/cdrom /mnt/cdrom 挂载一个 cdrom 或 dvdrom mount /dev/hdc /mnt/cdrecorder 挂载一个 cdrw 或 dvdrom mount /dev/hdb /mnt/cdrecorder 挂载一个 cdrw 或 dvdrom mount -o loop file.iso /mnt/cdrom 挂载一个文件或 ISO 镜像文件 mount -t vfat /dev/hda5 /mnt/hda5 挂载一个 Windows FAT32 文件系统 mount /dev/sda1 /mnt/usbdisk 挂载一个 usb 捷盘或闪存设备 mount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share 挂载一个 windows 网络共享 磁盘空间 df -h 显示已经挂载的分区列表 ls -lSr |more 以尺寸大小排列文件和目录 du -sh dir1 估算目录 ‘dir1’ 已经使用的磁盘空间’ du -sk * | sort -rn 以容量大小为依据依次显示文件和目录的大小 rpm -q -a --qf &#39;%10{SIZE}t%{NAME}n&#39; | sort -k1,1n 以大小为依据依次显示已安装的 rpm 包所使用的空间 (fedora, redhat 类系统) dpkg-query -W -f=&#39;${Installed-Size;10}t${Package}n&#39; | sort -k1,1n 以大小为依据显示已安装的 deb 包所使用的空间 (ubuntu, debian 类系统) 用户和群组 groupadd group_name 创建一个新用户组 groupdel group_name 删除一个用户组 groupmod -n new_group_name old_group_name 重命名一个用户组 useradd -c &quot;Name Surname &quot; -g admin -d /home/user1 -s /bin/bash user1 创建一个属于 “admin” 用户组的用户 useradd user1 创建一个新用户 userdel -r user1 删除一个用户 ( ‘-r’ 排除主目录) usermod -c &quot;User FTP&quot; -g system -d /ftp/user1 -s /bin/nologin user1 修改用户属性 passwd 修改口令 passwd user1 修改一个用户的口令 (只允许 root 执行) chage -E 2005-12-31 user1 设置用户口令的失效期限 pwck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的用户 grpck 检查 ‘/etc/passwd’ 的文件格式和语法修正以及存在的群组 newgrp group_name 登陆进一个新的群组以改变新创建文件的预设群组 文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消 ls -lh 显示权限 ls /tmp | pr -T5 -W$COLUMNS 将终端划分成 5 栏显示 chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r）、写(w)和执行(x)的权限 chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限 chown user1 file1 改变一个文件的所有人属性 chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性 chgrp group1 file1 改变文件的群组 chown user1:group1 file1 改变一个文件的所有人和群组属性 find / -perm -u+s 罗列一个系统中所有使用了 SUID 控制的文件 chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限 chmod u-s /bin/file1 禁用一个二进制文件的 SUID 位 chmod g+s /home/public 设置一个目录的 SGID 位 - 类似 SUID，不过这是针对目录的 chmod g-s /home/public 禁用一个目录的 SGID 位 chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件 chmod o-t /home/public 禁用一个目录的 STIKY 位 文件的特殊属性 - 使用 “+” 设置权限，使用 “-“ 用于取消 chattr +a file1 只允许以追加方式读写文件 chattr +c file1 允许这个文件能被内核自动压缩/解压 chattr +d file1 在进行文件系统备份时，dump 程序将忽略这个文件 chattr +i file1 设置成不可变的文件，不能被删除、修改、重命名或者链接 chattr +s file1 允许一个文件被安全地删除 chattr +S file1 一旦应用程序对这个文件执行了写操作，使系统立刻把修改的结果写到磁盘 chattr +u file1 若文件被删除，系统会允许你在以后恢复这个被删除的文件 lsattr 显示特殊的属性 打包和压缩文件 bunzip2 file1.bz2 解压一个叫做 ‘file1.bz2’的文件 bzip2 file1 压缩一个叫做 ‘file1’ 的文件 gunzip file1.gz 解压一个叫做 ‘file1.gz’的文件 gzip file1 压缩一个叫做 ‘file1’的文件 gzip -9 file1 最大程度压缩 rar a file1.rar test_file 创建一个叫做 ‘file1.rar’ 的包 rar a file1.rar file1 file2 dir1 同时压缩 ‘file1’, ‘file2’ 以及目录 ‘dir1’ rar x file1.rar 解压 rar 包 unrar x file1.rar 解压 rar 包 tar -cvf archive.tar file1 创建一个非压缩的 tarball tar -cvf archive.tar file1 file2 dir1 创建一个包含了 ‘file1’, ‘file2’ 以及 ‘dir1’的档案文件 tar -tf archive.tar 显示一个包中的内容 tar -xvf archive.tar 释放一个包 tar -xvf archive.tar -C /tmp 将压缩包释放到 /tmp 目录下 tar -cvfj archive.tar.bz2 dir1 创建一个 bzip2 格式的压缩包 tar -xvfj archive.tar.bz2 解压一个 bzip2 格式的压缩包 tar -cvfz archive.tar.gz dir1 创建一个 gzip 格式的压缩包 tar -xvfz archive.tar.gz 解压一个 gzip 格式的压缩包 zip file1.zip file1 创建一个 zip 格式的压缩包 zip -r file1.zip file1 file2 dir1 将几个文件和目录同时压缩成一个 zip 格式的压缩包 unzip file1.zip 解压一个 zip 格式压缩包 RPM 包 - （Fedora, Redhat 及类似系统） rpm -ivh package.rpm 安装一个 rpm 包 rpm -ivh --nodeeps package.rpm 安装一个 rpm 包而忽略依赖关系警告 rpm -U package.rpm 更新一个 rpm 包但不改变其配置文件 rpm -F package.rpm 更新一个确定已经安装的 rpm 包 rpm -e package_name.rpm 删除一个 rpm 包 rpm -qa 显示系统中所有已经安装的 rpm 包 rpm -qa | grep httpd 显示所有名称中包含 “httpd” 字样的 rpm 包 rpm -qi package_name 获取一个已安装包的特殊信息 rpm -qg &quot;System Environment/Daemons&quot; 显示一个组件的 rpm 包 rpm -ql package_name 显示一个已经安装的 rpm 包提供的文件列表 rpm -qc package_name 显示一个已经安装的 rpm 包提供的配置文件列表 rpm -q package_name --whatrequires 显示与一个 rpm 包存在依赖关系的列表 rpm -q package_name --whatprovides 显示一个 rpm 包所占的体积 rpm -q package_name --scripts 显示在安装/删除期间所执行的脚本 l rpm -q package_name --changelog 显示一个 rpm 包的修改历史 rpm -qf /etc/httpd/conf/httpd.conf 确认所给的文件由哪个 rpm 包所提供 rpm -qp package.rpm -l 显示由一个尚未安装的 rpm 包提供的文件列表 rpm --import /media/cdrom/RPM-GPG-KEY 导入公钥数字证书 rpm --checksig package.rpm 确认一个 rpm 包的完整性 rpm -qa gpg-pubkey 确认已安装的所有 rpm 包的完整性 rpm -V package_name 检查文件尺寸、 许可、类型、所有者、群组、MD5 检查以及最后修改时间 rpm -Va 检查系统中所有已安装的 rpm 包- 小心使用 rpm -Vp package.rpm 确认一个 rpm 包还未安装 rpm2cpio package.rpm | cpio --extract --make-directories *bin* 从一个 rpm 包运行可执行文件 rpm -ivh /usr/src/redhat/RPMS/arch/package.rpm 从一个 rpm 源码安装一个构建好的包 rpmbuild --rebuild package_name.src.rpm 从一个 rpm 源码构建一个 rpm 包 YUM 软件包升级器 - （Fedora, RedHat 及类似系统） yum install package_name 下载并安装一个 rpm 包 yum localinstall package_name.rpm 将安装一个 rpm 包，使用你自己的软件仓库为你解决所有依赖关系 yum update package_name.rpm 更新当前系统中所有安装的 rpm 包 yum update package_name 更新一个 rpm 包 yum remove package_name 删除一个 rpm 包 yum list 列出当前系统中安装的所有包 yum search package_name 在 rpm 仓库中搜寻软件包 yum clean packages 清理 rpm 缓存删除下载的包 yum clean headers 删除所有头文件 yum clean all 删除所有缓存的包和头文件 DEB 包 (Debian, Ubuntu 以及类似系统) dpkg -i package.deb 安装/更新一个 deb 包 dpkg -r package_name 从系统删除一个 deb 包 dpkg -l 显示系统中所有已经安装的 deb 包 dpkg -l | grep httpd 显示所有名称中包含 “httpd” 字样的 deb 包 dpkg -s package_name 获得已经安装在系统中一个特殊包的信息 dpkg -L package_name 显示系统中已经安装的一个 deb 包所提供的文件列表 dpkg --contents package.deb 显示尚未安装的一个包所提供的文件列表 dpkg -S /bin/ping 确认所给的文件由哪个 deb 包提供 APT 软件工具 (Debian, Ubuntu 以及类似系统) apt-get install package_name 安装/更新一个 deb 包 apt-cdrom install package_name 从光盘安装/更新一个 deb 包 apt-get update 升级列表中的软件包 apt-get upgrade 升级所有已安装的软件 apt-get remove package_name 从系统删除一个 deb 包 apt-get check 确认依赖的软件仓库正确 apt-get clean 从下载的软件包中清理缓存 apt-cache search searched-package 返回包含所要搜索字符串的软件包名称 查看文件内容 cat file1 从第一个字节开始正向查看文件的内容 tac file1 从最后一行开始反向查看一个文件的内容 more file1 查看一个长文件的内容 less file1 类似于 ‘more’ 命令，但是它允许在文件中和正向操作一样的反向操作 head -2 file1 查看一个文件的前两行 tail -2 file1 查看一个文件的最后两行 tail -f /var/log/messages 实时查看被添加到一个文件中的内容 文本处理 cat file1 file2 … | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT cat file1 | command( sed, grep, awk, grep, etc...) &gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个新文件中 cat file1 | command( sed, grep, awk, grep, etc...) &gt;&gt; result.txt 合并一个文件的详细说明文本，并将简介写入一个已有的文件中 grep Aug /var/log/messages 在文件 ‘/var/log/messages’中查找关键词”Aug” grep ^Aug /var/log/messages 在文件 ‘/var/log/messages’中查找以”Aug”开始的词汇 grep [0-9] /var/log/messages 选择 ‘/var/log/messages’ 文件中所有包含数字的行 grep Aug -R /var/log/* 在目录 ‘/var/log’ 及随后的目录中搜索字符串”Aug” sed &#39;s/stringa1/stringa2/g&#39; example.txt 将 example.txt 文件中的 “string1” 替换成 “string2” sed &#39;/^$/d&#39; example.txt 从 example.txt 文件中删除所有空白行 sed &#39;/ *#/d; /^$/d&#39; example.txt 从 example.txt 文件中删除所有注释和空白行 echo &#39;esempio&#39; | tr &#39;[:lower:]&#39; &#39;[:upper:]&#39; 合并上下单元格内容 sed -e &#39;1d&#39; result.txt 从文件 example.txt 中排除第一行 sed -n &#39;/stringa1/p&#39; 查看只包含词汇 “string1”的行 sed -e &#39;s/ *$//&#39; example.txt 删除每一行最后的空白字符 sed -e &#39;s/stringa1//g&#39; example.txt 从文档中只删除词汇 “string1” 并保留剩余全部 sed -n &#39;1,5p;5q&#39; example.txt 查看从第一行到第 5 行内容 sed -n &#39;5p;5q&#39; example.txt 查看第 5 行 sed -e &#39;s/00*/0/g&#39; example.txt 用单个零替换多个零 cat -n file1 标示文件的行数 cat example.txt | awk &#39;NR%2==1&#39; 删除 example.txt 文件中的所有偶数行 echo a b c | awk &#39;{print $1}&#39; 查看一行第一栏 echo a b c | awk &#39;{print $1,$3}&#39; 查看一行的第一和第三栏 paste file1 file2 合并两个文件或两栏的内容 paste -d &#39;+&#39; file1 file2 合并两个文件或两栏的内容，中间用”+”区分 sort file1 file2 排序两个文件的内容 sort file1 file2 | uniq 取出两个文件的并集(重复的行只保留一份) sort file1 file2 | uniq -u 删除交集，留下其他的行 sort file1 file2 | uniq -d 取出两个文件的交集(只留下同时存在于两个文件中的文件) comm -1 file1 file2 比较两个文件的内容只删除 ‘file1’ 所包含的内容 comm -2 file1 file2 比较两个文件的内容只删除 ‘file2’ 所包含的内容 comm -3 file1 file2 比较两个文件的内容只删除两个文件共有的部分 字符设置和文件格式转换 dos2unix filedos.txt fileunix.txt 将一个文本文件的格式从 MSDOS 转换成 UNIX unix2dos fileunix.txt filedos.txt 将一个文本文件的格式从 UNIX 转换成 MSDOS recode ..HTML &lt; page.txt &gt; page.html 将一个文本文件转换成 html recode -l | more 显示所有允许的转换格式 文件系统分析 badblocks -v /dev/hda1 检查磁盘 hda1 上的坏磁块 fsck /dev/hda1 修复/检查 hda1 磁盘上 linux 文件系统的完整性 fsck.ext2 /dev/hda1 修复/检查 hda1 磁盘上 ext2 文件系统的完整性 e2fsck /dev/hda1 修复/检查 hda1 磁盘上 ext2 文件系统的完整性 e2fsck -j /dev/hda1 修复/检查 hda1 磁盘上 ext3 文件系统的完整性 fsck.ext3 /dev/hda1 修复/检查 hda1 磁盘上 ext3 文件系统的完整性 fsck.vfat /dev/hda1 修复/检查 hda1 磁盘上 fat 文件系统的完整性 fsck.msdos /dev/hda1 修复/检查 hda1 磁盘上 dos 文件系统的完整性 dosfsck /dev/hda1 修复/检查 hda1 磁盘上 dos 文件系统的完整性 初始化一个文件系统 mkfs /dev/hda1 在 hda1 分区创建一个文件系统 mke2fs /dev/hda1 在 hda1 分区创建一个 linux ext2 的文件系统 mke2fs -j /dev/hda1 在 hda1 分区创建一个 linux ext3(日志型)的文件系统 mkfs -t vfat 32 -F /dev/hda1 创建一个 FAT32 文件系统 fdformat -n /dev/fd0 格式化一个软盘 mkswap /dev/hda3 创建一个 swap 文件系统 SWAP 文件系统 mkswap /dev/hda3 创建一个 swap 文件系统 swapon /dev/hda3 启用一个新的 swap 文件系统 swapon /dev/hda2 /dev/hdb3 启用两个 swap 分区 备份 dump -0aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的完整备份 dump -1aj -f /tmp/home0.bak /home 制作一个 ‘/home’ 目录的交互式备份 restore -if /tmp/home0.bak 还原一个交互式备份 rsync -rogpav --delete /home /tmp 同步两边的目录 rsync -rogpav -e ssh --delete /home ip_address:/tmp 通过 SSH 通道 rsync rsync -az -e ssh --delete ip_addr:/home/public /home/local 通过 ssh 和压缩将一个远程目录同步到本地目录 rsync -az -e ssh --delete /home/local ip_addr:/home/public 通过 ssh 和压缩将本地目录同步到远程目录 dd bs=1M if=/dev/hda | gzip | ssh user@ip_addr &#39;dd of=hda.gz&#39; 通过 ssh 在远程主机上执行一次备份本地磁盘的操作 dd if=/dev/sda of=/tmp/file1 备份磁盘内容到一个文件 tar -Puf backup.tar /home/user 执行一次对 ‘/home/user’ 目录的交互式备份操作 ( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr &#39;cd /home/share/ &amp;&amp; tar x -p&#39; 通过 ssh 在远程目录中复制一个目录内容 ( tar c /home ) | ssh -C user@ip_addr &#39;cd /home/backup-home &amp;&amp; tar x -p&#39; 通过 ssh 在远程目录中复制一个本地目录 tar cf - . | (cd /tmp/backup ; tar xf - ) 本地将一个目录复制到另一个地方，保留原有权限及链接 find /home/user1 -name &#39;*.txt&#39; | xargs cp -av --target-directory=/home/backup/ --parents 从一个目录查找并复制所有以 ‘.txt’ 结尾的文件到另一个目录 find /var/log -name &#39;*.log&#39; | tar cv --files-from=- | bzip2 &gt; log.tar.bz2 查找所有以 ‘.log’ 结尾的文件并做成一个 bzip 包 dd if=/dev/hda of=/dev/fd0 bs=512 count=1 做一个将 MBR (Master Boot Record)内容复制到软盘的动作 dd if=/dev/fd0 of=/dev/hda bs=512 count=1 从已经保存到软盘的备份中恢复 MBR 内容 光盘 cdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force 清空一个可复写的光盘内容 mkisofs /dev/cdrom &gt; cd.iso 在磁盘上创建一个光盘的 iso 镜像文件 mkisofs /dev/cdrom | gzip &gt; cd_iso.gz 在磁盘上创建一个压缩了的光盘 iso 镜像文件 mkisofs -J -allow-leading-dots -R -V &quot;Label CD&quot; -iso-level 4 -o ./cd.iso data_cd 创建一个目录的 iso 镜像文件 cdrecord -v dev=/dev/cdrom cd.iso 刻录一个 ISO 镜像文件 gzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - 刻录一个压缩了的 ISO 镜像文件 mount -o loop cd.iso /mnt/iso 挂载一个 ISO 镜像文件 cd-paranoia -B 从一个 CD 光盘转录音轨到 wav 文件中 cd-paranoia -- &quot;-3&quot; 从一个 CD 光盘转录音轨到 wav 文件中（参数-3） cdrecord --scanbus 扫描总线以识别 scsi 通道 dd if=/dev/hdc | md5sum 校验一个设备的 md5sum 编码，例如一张 CD 网络 - （以太网和 WIFI 无线） ifconfig eth0 显示一个以太网卡的配置 ifup eth0 启用一个 ‘eth0’ 网络设备 ifdown eth0 禁用一个 ‘eth0’ 网络设备 ifconfig eth0 192.168.1.1 netmask 255.255.255.0 控制 IP 地址 ifconfig eth0 promisc 设置 ‘eth0’ 成混杂模式以嗅探数据包 (sniffing) dhclient eth0 以 dhcp 模式启用 ‘eth0’ route -n show routing table route add -net 0/0 gw IP_Gateway configura default gateway route add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network ‘192.168.0.0/16’ route del 0/0 gw IP_gateway remove static route echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward activate ip routing hostname show hostname of system host www.example.com lookup hostname to resolve name to ip address and viceversa(1) nslookup www.example.com lookup hostname to resolve name to ip address and viceversa(2) ip link show show link status of all interfaces mii-tool eth0 show link status of ‘eth0’ ethtool eth0 show statistics of network card ‘eth0’ netstat -tup show all active network connections and their PID netstat -tupl show all network services listening on the system and their PID tcpdump tcp port 80 show all HTTP traffic iwlist scan show wireless networks iwconfig eth1 show configuration of a wireless network card hostname show hostname host www.example.com lookup hostname to resolve name to ip address and viceversa nslookup www.example.com lookup hostname to resolve name to ip address and viceversa whois www.example.com lookup on Whois database 其他 man page批量重命名 renameb ssh ssh-copy-id -i ~/.ssh/id_rsa.pub root@112.126.82.206rsync /usr/bin/rsync -uRavz –delete -e ssh /data/tomcat/apache-tomcat-8080 root@112.126.82.206:/交换ctrl和caps123sudo vi /etc/default/keyboardXKBOPTIONS=&quot;ctrl:swapcaps&quot;sudo dpkg-reconfigure keyboard-configuration]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[ubuntu搭建nexus,maven私有仓库.]]></title>
      <url>%2F2016%2F08%2F20%2Fubuntu%E6%90%AD%E5%BB%BAnexus-maven%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%2F</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      <title><![CDATA[搭建debian服务器]]></title>
      <url>%2F2016%2F08%2F08%2F%E6%90%AD%E5%BB%BAdebian%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
      <content type="text"><![CDATA[配置sudo su - chmod -w /etc/sudoers vi /etc/sudoers 添加一行willeam ALL=(ALL:ALL) ALL 添加163源 上网查找对应版本的数据源 sudo vi /etc/apt/sources.list 把找到的源添加到文件后 sudo apt-get update 更新源 安装输入法 sudo apt-get install fcitx fcitx-config-gtk fcitx-ui-classic fcitx-frontend-gtk3 fcitx-ui-light 上网下载搜狗linux版输入法，安装。 配置固定ip sudo cp /etc/network/interfaces /etc/network/interfaces_20160812 sudo]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用poi把excel2003转成excel2007]]></title>
      <url>%2F2016%2F08%2F06%2F%E4%BD%BF%E7%94%A8poi%E6%8A%8Aexcel2003%E8%BD%AC%E6%88%90excel2007%2F</url>
      <content type="text"><![CDATA[使用poi把excel2003转成excel2007 由于老项目使用的是jxl导出excel2003技术，现在导出的数据量超过excel2003最大支持行数65536行，所以需要升级成excel2007.并把老的，已经生成完的转换为excel2007. 把已有使用jxl生成excel2003代码改为使用poi生成excel2007. 以前生成月度excel报表是读取每个代理商一个月的excel2003文件写到excel2007文件中，现在需要修改为读取excel2007. 把以前已经生成的excel2003修改为excel2007. 把esales页面系统，点击下载连接改为下载新excel2007连接。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[debian8 安装 php]]></title>
      <url>%2F2016%2F05%2F31%2Fdebian8-%E5%AE%89%E8%A3%85-php%2F</url>
      <content type="text"><![CDATA[下载php7 解压 进入目录./confirure报错我们安装libxml2&amp;libxml2-devsudo apt-get install libxml2 libxml2-dev安装完执行./configure --prefix=/usr/local/phpsudo make &amp; sudo make install等待安装结束!OK! 添加模块 123456cd ~/opt/php/php-7.0.7/cd ./ext/mbstring/usr/local/php/php-7.0.7/bin/phpize./configure –with-php-config=/usr/local/php/php-7.0.7/bin/php-configmakemake install php参数12345678910111213141516171819202122232425262728293031323334353637383940./configure --prefix=/usr/local/php/php-5.3.5 \--with-config-file-path=/usr/local/php/php-5.3.5/etc \--with-config-file-scan-dir=/usr/local/php/php-5.3.5/etc/conf.d \--with-mcrypt \--with-mhash \--with-mysqli=mysqlnd \--with-pdo-mysql=mysqlnd \--with-gd \--with-iconv \--with-zlib \--with-curl \--with-jpeg-dir \--with-freetype-dir \--with-apxs2=/usr/local/apache/bin/apxs \--with-openssl \--with-xmlrpc \--with-gettext \--with-fpm-user=nginx \--with-fpm-group=nginx \--enable-fpm \--enable-cgi \--enable-xml \--enable-bcmath \--enable-inline-optimization \--enable-mbregex \--enable-mbstring \--enable-ftp \--enable-gd-native-ttf \--enable-pcntl \--enable-sockets \--enable-sysvmsg \--enable-sysvshm \--enable-shmop \--enable-zip \--enable-soap \--enable-session \--enable-opcache \--enable-climake &amp;&amp; make install phpinfo信息不显示解决方法：short_open_tag = On]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[debian8 安装 svn]]></title>
      <url>%2F2016%2F05%2F30%2Fdebian8-%E5%AE%89%E8%A3%85-svn%2F</url>
      <content type="text"><![CDATA[安装 apr 安装 apr-util 由于我电脑之前安装过httpd，所以以上两步略过！参照: debian install httpd service 安装 opensslCFLAGS=-fPIC ./config --prefix=/usr/local/openssl enable-shared 安装 sconspython setup.py install 安装 serfsudo scons PREFIX=/usr/local/serf APR=/usr/local/apr/bin/apr-1-config APU=/usr/local/apr-util/bin/apu-1-config OPENSSL=/usr/local/openssl 安装sqlite解压sqlite-amalgamation软件包到sqlite-amalgamation目录 安装 svn./configure --prefix=/usr/local/svn --with-apr=/usr/local/apr/bin/apr-1-config --with-apr-util=/usr/local/apr-util/bin/apu-1-config --with-serf=/usr/local/serf --with-openssl=/usr/local/openssl --enable-mod-activation 执行svn --version命令，如果有ra_serf说明svn支持http方式 svn 常用命令 检出 svn checkoutsvn checkout path(path是svn库地址)(简写命令svn co) 提交 svn commitsvn commit –m “日志信息”要提交的文件(简写命令svn ci) 删除文件 svn delete$&gt;svn delete path -m “删除理由“$&gt;svn delete http:// -m “删除理由”然后在本地svn update，本地对应的文件将会删除。 更新 svn update默认更新到最新版本命令：svn update file（简写命令svn up）$&gt;svn update file更新到指定版本$&gt;svn update –r m file 查看日志 svn logsvn log file 比较文件 svn diffsvn diff –r m:n file.c(m,n为相比较的版本号) svn还原和回退 svn revert/svn merge svn还原： 命令：svn revert file svn回退，需要通过合并的方法回退 命令：svn merge –r m:n path (从m版本回退到n版本) 然后提交（svn commit） 重新定位 svn relocatesvn switch --relocate 原svn库地址 新svn库地址 其它 导出（export）：使用此功能获取一个没有SVN控制信息的工作复本，导出的文件没有.svn文件，不可直接执行提交 导入（import）：将本地文件导入到服务器中，一般用于初始svn库目录时 清理（svn cleanup）：当Subversion操作中断时，会有一些残留的操作信息保留在工作复本中，这时需要进行清理才能够重新进行工作； 查看文件或目录状态（svn status）：查看工作副本中某一目录下文件和子目录的状态，【正常状态不显示；?：不在svn的控制中；M：内容被修改；C：发生冲突；A：预定加入到版本库；K：被锁定】 使用规范 日志书写规范日志内容长度要求10个字符以上，即5个汉字以上；日志内容要求体现操作内容，如：增加×××功能/ 修复×××问题/ 删除×××功能提交频率要求编译通过后提交一次]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[debian8 安装&配置 zsh]]></title>
      <url>%2F2016%2F05%2F30%2Fdebian8-%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE-zsh%2F</url>
      <content type="text"><![CDATA[安装zshsudo apt-get install zsh 安装oh-my-zsh sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;安装完会出现如下界面 修改配置配置文件是~/.zshrc修改样式，修改配置文件ZSH_THEME=random我的样式af-magic修改插件，修改配置文件plugins=git ruby等，插件在~/.oh-my-zsh/plugins/ 目录下我的插件plugins=(git bundler rake ruby docker jump mvn node npm nyan python sudo svn themes web-search vi-mode )这时shell就变得很好看了！ 修改zsh为默认shell使用whereis zsh命令查看zsh路径使用chsh -s /bin/zsh命令修改修改默认shell,输入密码后重新登录。ok！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[debian8 安装 mysql5.7]]></title>
      <url>%2F2016%2F05%2F28%2Fdebian8-%E5%AE%89%E8%A3%85-mysql5-7%2F</url>
      <content type="text"><![CDATA[deb包安装 下载mysql安装mysql服务 sudo apt-get install mysql-server安装mysql客户端 sudo apt-get install mysql-client]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[linux 安装 virtualbox]]></title>
      <url>%2F2016%2F05%2F27%2Flinux-%E5%AE%89%E8%A3%85-virtualbox%2F</url>
      <content type="text"><![CDATA[我是使用debian系统sudo apt-get install linux-headers-$(uname -r|sed &#39;s,[^-]*-[^-]*-,,&#39;) virtualbox 出现“Failed to open a session for the virtual machine windows7. VT-x is being used by another hypervisor”问题原因 virtualbox 和 kvm 虚拟机冲突。解决办法，卸载kvm虚拟机 先杀掉kvm进程 12ps -ef | grep kvm kill *** 卸载kvm模块 123lsmod | grep kvmsudo modprobe -r kvm-intelsudo modprobe -r kvm 卸载kvmsudo apt-get remove kvm* 这时重新启动virtualbox就ok了！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[debian8 install ktorrent]]></title>
      <url>%2F2016%2F05%2F26%2Fdebian8-install-ktorrent%2F</url>
      <content type="text"></content>
    </entry>

    
    <entry>
      <title><![CDATA[debian install httpd service]]></title>
      <url>%2F2016%2F05%2F25%2Fdebian-install-httpd-service%2F</url>
      <content type="text"><![CDATA[安装httpd 2.21234cd ~/opt/apache/httpd/httpd2.2.31./configure --prefix=/usr/local/httpd2.2.31sudo make sudo make install 安装httpd 2.4下载apr和apr-utilDownload - The Apache Portable Runtime Project选择最新的下载。 安装apr 12./configure --prefix=/usr/local/aprsudo make &amp; make install 安装apr-util 12./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/sudo make &amp; make install 安装httpd 1./configure --prefix=/usr/local/httpd2.4.20 --sysconfdir=/etc/httpd24 --enable-so --enable-ssl --enable-cgi --enable-rewrite --with-zlib --with-pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util/ --enable-modules=most --enable-mpms-shared=all --with-mpm=event 配置httpd服务 123456cp /usr/local/httpd2.4.20/bin/apachectl /etc/init.d/httpdvim /etc/init.d/httpd;; 在头部添加# chkconfig: 2345 90 90 chkconfig --add httpd chkconfig --level 345 httpd on 这时就可以使用sudo service httpd start命令启动http服务了.如果失败重启下电脑重新执行下命令 编译参数参考:apache编译参数]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[handsontable 自定义右键菜单]]></title>
      <url>%2F2016%2F05%2F24%2Fhandsontable-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%2F</url>
      <content type="text"><![CDATA[12345678910111213141516171819202122232425262728293031323334353637383940414243hot1.updateSettings(&#123; contextMenu: &#123; callback: function (key, options) &#123; console.log(key); if (key === &apos;ColType&apos;) &#123; setTimeout(function () &#123; //timeout is used to make sure the menu collapsed before alert is shown alert(&quot;This is a context menu with default and custom options mixed&quot;); &#125;, 100); &#125; &#125;, items: &#123; // 上面插入一行 &quot;row_above&quot;: &#123;&#125;, // 下面插入一行 &quot;row_below&quot;: &#123;&#125;, &quot;hsep1&quot;: &quot;---------&quot;, // 左侧插入一列 &quot;col_left&quot;:&#123;&#125;, // 右侧插入一列 &quot;col_right&quot;:&#123;&#125;, &quot;hsep2&quot;: &quot;---------&quot;, // 删除行 &quot;remove_row&quot;:&#123;&#125;, // 删除列 &quot;remove_col&quot;:&#123;&#125;, &quot;hsep3&quot;: &quot;---------&quot;, &quot;undo&quot;:&#123;&#125;, &quot;redo&quot;:&#123;&#125;, &quot;make_read_only&quot;: &#123;&#125;, // 单元格对齐方式 //&quot;alignment&quot;: &#123;&#125;, &quot;commentsAddEdit&quot;: &#123;&#125;, // 合并单元格菜单 &quot;mergeCells&quot;: &#123;&#125;, &quot;hsep2&quot;: &quot;---------&quot;, // 自定义菜单 &quot;ColType&quot;: &#123; name: &apos;ColType&apos;, &#125; &#125; &#125;&#125;);]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[My favorite linux tools]]></title>
      <url>%2F2016%2F05%2F23%2FMy-favorite-linux-tools%2F</url>
      <content type="text"><![CDATA[iptux局域网传输 飞鸽 Thunderbird邮件客户端 Thunderbird sambaSamba - opening windows to a wider world局域网共享 firefox浏览器 xmind思维导图 fcitx输入法 mplayer播放器 Nutstore坚果云 rdesktop远程连接 latex生成pdf ktorrent磁力连接下载器 Puddletag音乐标签编辑工具Linux下MP3标签编辑工具Puddletag 十大好用linux实用工具推荐小工具集合 超酷的 Linux/Unix 终端/控制台工具小集合 - 开源中国社区]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[使用凤蝶开发模板和区块]]></title>
      <url>%2F2016%2F05%2F23%2F%E4%BD%BF%E7%94%A8%E5%87%A4%E8%9D%B6%E5%BC%80%E5%8F%91%E6%A8%A1%E6%9D%BF%E5%92%8C%E5%8C%BA%E5%9D%97%2F</url>
      <content type="text"><![CDATA[简介： 凤蝶是支付宝提供的，用来帮助运营同学快速发布和修改运营内容的平台 整个页面都可配置使用模板(例如：静态页面) 页面有自己的业务和可配置的需求使用区块(例如：车主服务首页) 凤蝶开发使用nunjucks模板语法，Nunjucks和velocity模板技术，可以看下 使用 Velocity 模板引擎快速生成代码 模板开发 凤蝶初始化执行 fengdie init 选择模板包 输入包名 输入版本号 输入标题初始化模板包结束 模板包目录结构如下: 文件功能说明 README.md —— 模板使用说明文件 dist目录 —— 静态文件存放目录 fengdie.config.js —— 凤蝶功能配置文件 index.html —— 应用首⻚文件 layouts/default.html —— 所有应用⻚面的布局文件 package.json —— 模板包的说明文件 schemas/config.schema —— 应用⻚面中可配置的内容描述文件 schemas/config.json —— 与config.schema对应mock数据文件 snapshot.png —— 模板在凤蝶上显示的缩略图 开发模板 按照需求修改index.html文件 修改schemacs/config.schema文件 123456789Object(配置) &#123; activities(车主服务活动): Array &#123; href(活动链接), title(标题), statusImg(状态图片): Image, img(图片地址): Image, desc(描述): String &#125;&#125; 打包进入凤蝶项目跟目录，执行fengdie zip命令 登录凤蝶系统上传模板包 这时在我的模板里就可以看到刚刚上传的模板包,点击模板就可以维护模板了 设置完模板数据点击编辑完成-&gt;发布,就可以使用模板了 详细信息请查看凤蝶开发手册 区块开发 区块包初始化fengdie init和模板包初始化相同 区块包目录结构如下 文件功能说明 README.md —— 区块使用说明文件 fengdie.config.js —— 凤蝶功能配置文件 package.json —— 区块包的说明文件 sample/asd.schema —— 应用⻚面中可配置的内容描述文件 topbars.vm —— 代码片段文件 snapshot.png —— 区块包在凤蝶上显示的缩略图 开发区块 修改topbars.vm文件 12345678910111213141516171819 &lt;!-- 区块模板样例 --&gt;&lt;!-- 1. schema 的使用 --&gt;&lt;!-- 1.1 引用路径从包目录开始 --&gt;&lt;!-- 1.2 使用指南请查看 https://site.alipay.net/fengdie/dev-guide/datum/schema.html --&gt;#cmsparse(&quot;vbizplatform/sample/ads.utf8.vm&quot;)#foreach($info in $fd_vbizplatform_sample_ads)&lt;li class=&quot;mui-table-view-cell mui-media mui-col-xs-4 mui-col-sm-3&quot;&gt;#if($info.get(&quot;jiaobiao&quot;))&lt;img src=&quot;$info.get(&quot;jiaobiao&quot;)&quot; class=&quot;index-grid-9-new-icon&quot;&gt;#end#if($info.get(&quot;href&quot;))&lt;a href=&quot;$info.get(&quot;href&quot;))&quot;&gt;#end&lt;img src=&quot;$info.get(&quot;img&quot;)&quot; class=&quot;carui-img-height&quot;&gt;&lt;div class=&quot;mui-media-body carui-active-title&quot;&gt;$info.get(&quot;title&quot;)&lt;/div&gt;&lt;div class=&quot;mui-media-body carui-active-desc&quot;&gt;$info.get(&quot;desc&quot;)&lt;/div&gt;&lt;/a&gt; #end&lt;!-- 2. 可以继续引入多个 schema --&gt; 修改ads.schema文件 1234567Array(viewnine) &#123; href(跳转连接), title(标题), desc(描述), img(图片路径), jiaobiao(角标路径)&#125; 上传区块包，并维护数据。 保存，同步到环境,提示执行成功。注意： 发布成功后，凤蝶系统，会把topbars.vm文件和生成的模板数据文件放到应用机器的/home/admin/uiweb/fengdie/目录下(凤蝶系统先把区块包发到oss上，然后调用openapi通知ecs，ecs访问oss把凤蝶区块下载到/home/admin/uiweb/fengdie/目录下)模板数据文件: 编写java代码解析,vm模板文件 12345678910111213141516171819202122232425262728/** * 根据vm模版动态生成html * * @return 生成后html代码 */ protected String invokeVelocityDynamicCreateHtml(String url) &#123; //初始化并取得Velocity引擎 VelocityEngine ve = new VelocityEngine(); Properties pros = new Properties(); //取得velocity的上下文context VelocityContext context = new VelocityContext(); StringWriter write = new StringWriter(); //取得velocity的模版 Template t = null; try &#123; InputStream is = BaseController.class.getClassLoader().getResourceAsStream(&quot;config/velocity.properties&quot;); InputStreamReader in = new InputStreamReader(is); pros.load(in); ve.init(pros); t = ve.getTemplate(url); t.merge(context, write); &#125; catch (Throwable e) &#123; logger.error(&quot;根据velocity生成html异常&quot;, e); return &quot;&quot;; &#125; logger.info(&quot;调用vm生成成功,html=&#123;&#125;&quot;, write.toString()); return write.toString(); &#125; 我的velocity.properties配置文件12345678910111213#encodinginput.encoding=UTF-8output.encoding=UTF-8contentType=text/html;charset=UTF-8# 加载文件方式# resource.loader = file# 模版位置file.resource.loader.path = /home/admin/uiweb/fengdie# 是否缓存file.resource.loader.cache = true# 不输出日志文件runtime.log.logsystem.class=org.apache.velocity.runtime.log.NullLogChute# org.apache.velocity.runtime.log.NullLogChute 然后把生成的html代码输出到页面上。 *这里我使用的原生velocity解析，也可以使用SOFA-Lite 详细信息请查看凤蝶开发手册]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[My favorite gnome-shell-exception]]></title>
      <url>%2F2016%2F05%2F22%2FMy-favorite-gnome-shell-exception%2F</url>
      <content type="text"><![CDATA[Rss feedRss 阅读 Openweather天气 Places Status indicator快速访问资源 Pomodoro番茄时钟 Public ip address外网IP User themes自定义样式 Web search dialogweb搜索 system-monitor系统管理 Emacs managerEmacs server管理 Add user and host name to panel显示用户名和域名]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[My favorite Eclipse Plugins]]></title>
      <url>%2F2016%2F05%2F21%2FMy-favorite-Eclipse-Plugins%2F</url>
      <content type="text"><![CDATA[eclipse theme coloreclipse样式插件iteman Emacs - Eclipse Color Themes emacs+emacs 快捷键插件install:eclipse marketplactsearch emacs+installEmacs+ | Eclipse Plugins, Bundles and Products - Eclipse Marketplace]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[My favorite Firefox Addons]]></title>
      <url>%2F2016%2F05%2F21%2FCommon-Firefox-Addons%2F</url>
      <content type="text"><![CDATA[firebug调试插件 fireftpftp插件 微信弹幕 Copy the name and URL of a link or a Tab复制url和标题 Text Encoding修改页面编码 Easy Screenshot截图工具]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[阿里云ECS搭建vsftpd服务,部属hexo]]></title>
      <url>%2F2016%2F05%2F21%2F%E9%98%BF%E9%87%8C%E4%BA%91%E6%90%AD%E5%BB%BAvsftpd%E6%9C%8D%E5%8A%A1-%E9%83%A8%E5%B1%9Ehexo%2F</url>
      <content type="text"><![CDATA[安装vsftpd服务yum install vsftpd 配置vsftpd.conf配置文档英文地址: vsftpd配置中文地址: vsftpd配置 新建hexo用户useradd -d /home/ftp -g ftp -s /sbin/nologin ftpuser -p password 启动vsftpd服务systemctl start vsftpd.service]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[handsontable组件和jqwidgets(jqxdragdrop组件)在一个页面产生调整宽高bug]]></title>
      <url>%2F2016%2F05%2F19%2Fhandsontable%20and%20jqwidgets-jqxdragdropbug%2F</url>
      <content type="text"><![CDATA[修改handsontable.full.jshandsontable绑定的”mouseup”事件，监听区域默认是window区域太大。引起冲突。把监听区域改为Elemant]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[easyui custom tags]]></title>
      <url>%2F2016%2F05%2F19%2Feasyui-custom-tags%2F</url>
      <content type="text"><![CDATA[easyui自定义标签 datagrid edit combobox 手动输入保存不上问题解决办法 使用onEndEdit事件（该事件可以获取到editor对象，onAfterEdit事件获取不到Editor对象） 通过editor拿到输入数据并保存。 1234567891011int ci = 0;for(Column col : columnList )&#123; for(Combobox cbb : col.getCombobox())&#123; if(cbb != null)&#123; str += &quot;var ed&quot; + ci + &quot; = $j(\&quot;#&quot;+RandomNumber+&quot;\&quot;).datagrid(\&quot;getEditor\&quot;,&#123;index:rowIndex,field:\&quot;&quot;+col.getField()+&quot;\&quot;&#125;);&quot;; str += &quot;var val&quot; + ci + &quot; = ed&quot; + ci + &quot;.target.combobox(&apos;getText&apos;);&quot;; str += &quot;rowData[\&quot;&quot; + col.getField() + &quot;\&quot;] = val&quot; + ci + &quot;;&quot;; ci++; &#125; &#125;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[install debian gnome chinese-fonts]]></title>
      <url>%2F2016%2F05%2F19%2Finstall-debian-gnome-chinese-fonts%2F</url>
      <content type="text"><![CDATA[首先获得一套字体库（Google一下一大把,或者在windows下复制一份”c://windows/fonts”）。 在/usr/share/fonts目录下建立一个子目录，例如win，命令如下： sudo mkdir /usr/share/fonts/win 将字体文件复制到该目录下，使用命令：先挂载u盘mount /dev/sdb1 /mnt然后复制 sudo cp msyh.ttf /usr/share/fonts/win/ 建立字体索引信息，更新字体缓存： 1234cd /usr/share/fonts/winsudo mkfontscale sudo mkfontdir sudo fc-cache -fv 至此，字体已经安装完毕！]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[博客搭建完成]]></title>
      <url>%2F2016%2F05%2F17%2Findex%2F</url>
      <content type="text"><![CDATA[博客搭建完成，使用hexo,github pages,搭建 主要用来记录的一些自己的一些所见，所想。整理资料中—永远保持快乐]]></content>
    </entry>

    
  
  
</search>
